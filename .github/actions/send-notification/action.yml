name: Send Notification
description: Sends a Google Chat message as a notification of the job's outcome

inputs:
  webhook-url:
    description: 'Google Chat Webhook URL'
    required: true

runs:
  using: composite
  steps:
    - id: run-info
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        # Pull additional details from GitHub API
        json=$(gh run view ${{ github.run_id }} -R ${{ github.repository }} --json name,number,displayTitle,url,headSha,jobs)
        # Get sanitized display title (usually a commit message or PR title) from GitHub API
        displayTitle=$(echo $json | jq -r .displayTitle | sed 's/"/\\"/g')
        # Parse workflow yaml file name from full ref name
        workflow=$(echo ${{ github.workflow_ref }} | awk -F'/|@' '{ print $5 }')
        # Build workflow URL with branch name
        workflowUrl="${{ github.server_url }}/${{ github.repository }}/actions/workflows/${workflow}?query=branch%3A${{ github.ref_name }}"
        # Get workflow name from GitHub API (also available as "github.workflow")
        workflowName=$(echo $json | jq -r .name | sed 's/"/\\"/g')
        # Get workflow run URL from GitHub API
        runUrl=$(echo $json | jq -r .url)
        # Get workflow run number from GitHub API (also available as "github.run_number")
        runNumber=$(echo $json | jq -r .number)
        # Determine overall run status (based on all jobs preceding this one)
        runStatus=$(echo $json | jq -r '.jobs | map(select(.conclusion != "")) | if all(.conclusion == "success" or .conclusion == "skipped") then "succeeded" elif any(.conclusion == "failure") then "failed" elif any(.conclusion == "cancelled") then "cancelled" else "unsuccessful" end')
        # Gather author info
        author="${{ github.event.sender.login }}"
        authorUrl="${{ github.event.sender.html_url }}"
        # **** Templates ****
        # Workflow status with link to workflow run
        workflowStatus="<${runUrl}|${displayTitle}> ${runStatus}"
        # Workflow info with link to all workflow runs for this branch
        workflowInfo="<${workflowUrl}|${workflowName}> #${runNumber}"
        # Determine run info, with either pull request, commit or manual run info
        if [ ! -z "${{ github.event.pull_request.html_url }}" ] ; then
          prNumber="${{ github.event.pull_request.number }}"
          prUrl="${{ github.event.pull_request.html_url }}"
          runInfo="Pull request #<${prUrl}|${prNumber}> opened by <${authorUrl}|${author}>"
        elif [ ! -z "${{ github.event.head_commit.url }}" ] ; then
          commitUrl="${{ github.event.head_commit.url }}"
          shaId=$(echo $json | jq -r .headSha | awk '{ print substr($0, 0, 7) }')
          runInfo="Commit <${commitUrl}|${shaId}> pushed by <${authorUrl}|${author}>"
        else
          runInfo="Manually run by <${authorUrl}|${author}>"
        fi
        # Build job info messages, joined in single line (multiline breaks GITHUB_ENV)
        jobInfo=$(echo $json | jq -r '.jobs | map(select(.conclusion != "")) | map("* <" + .url + "|" + .name + "> was " + .conclusion) | join("\\n")')
        # Set results as env vars
        echo "WORKFLOW_STATUS=$workflowStatus" >> $GITHUB_ENV
        echo "WORKFLOW_INFO=$workflowInfo" >> $GITHUB_ENV
        echo "RUN_INFO=$runInfo" >> $GITHUB_ENV
        echo "JOB_INFO=$jobInfo" >> $GITHUB_ENV
        # Output status
        echo "result=$runStatus" >> $GITHUB_OUTPUT
    - shell: bash
      run: |
        curl -X POST '${{ inputs.webhook-url }}' -H 'Content-Type: application/json' -d '{ "text": "${{ env.WORKFLOW_STATUS }}\n${{ env.WORKFLOW_INFO }}: ${{ env.RUN_INFO }}\n\n${{ env.JOB_INFO }}" }' || true
